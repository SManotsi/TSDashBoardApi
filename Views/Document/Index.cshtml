@model IEnumerable<TeksaHDashboard.Models.DocumentsViewModel>

@{
    ViewData["Title"] = "Documents List";
}

<div class="container mt-4">
    <h1 class="text-center">Documents List</h1>

    <p class="text-center">
        <a asp-action="Create" class="btn btn-primary">Create New</a>
    </p>

    <!-- Search Bar -->
    <div class="row mb-3">
        <div class="col-md-6 offset-md-3">
            <form asp-action="Index" method="get">
                <div class="input-group">
                    <input type="text" name="searchTerm" class="form-control" placeholder="Search by document name..." aria-label="Search" />
                    <div class="input-group-append">
                        <button class="btn btn-outline-secondary" type="submit">Search</button>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <table class="table table-striped table-bordered">
        <thead class="thead-light">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.First().Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().UploadDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().FilePath)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().Email)
                </th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @if (!Model.Any()) // Check if there are no documents
            {
                <tr>
                    <td colspan="5" class="text-center">No documents available.</td>
                </tr>
            }
            else
            {
                foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.UploadDate, "MM/dd/yyyy")
                        </td>
                        <td>
                            <!-- Create a link to download the document -->
                            <a href="@Url.Content(item.FilePath)" target="_blank">@Html.DisplayFor(modelItem => item.FilePath)</a>
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Email)
                        </td>
                        <td>
                            <div class="btn-group">
                                @Html.ActionLink("Edit", "Edit", new { id = item.Id }, new { @class = "btn btn-warning btn-sm" })
                                @Html.ActionLink("Details", "Details", new { id = item.Id }, new { @class = "btn btn-info btn-sm" })
                                @Html.ActionLink("Delete", "Delete", new { id = item.Id }, new { @class = "btn btn-danger btn-sm" })
                                <!-- Share Button -->
                                <button type="button" class="btn btn-success btn-sm" onclick="shareDocument(@item.Id)">Share</button>
                            </div>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>

<style>
    body {
        background-color: #f4f4f4; /* Light background */
    }

    h1 {
        background-color: gray;
        color: white;
        padding: 15px;
        text-align: center;
    }

    .container {
        background-color: white;
        padding: 20px;
        border-radius: 8px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    }

    .table {
        background-color: white;
        margin-top: 20px;
    }

    .thead-light {
        background-color: lightgray; /* Light gray background for table headers */
    }

    .btn-primary {
        background-color: #007bff;
        border: none;
    }

    .btn-group .btn {
        margin-right: 5px;
    }
</style>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        function shareDocument(documentId) {
            const email = prompt("Enter the email address to share the document:");
            if (email) {
                fetch(`/api/Document/share/${documentId}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ email: email }) // Wrap email in an object
                })
                    .then(response => {
                        if (response.ok) {
                            alert("Document shared successfully!");
                        } else {
                            alert("Error sharing document. Please try again.");
                        }
                    })
                    .catch(error => {
                        alert("Error sharing document: " + error);
                    });
            }
        }
    </script>
}
